<?php

namespace DoctrineProxies\__CG__\TakeOutHotline\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \TakeOutHotline\Entities\Order implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'id', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'customer', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'firstName', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'lastName', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'address1', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'address2', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'city', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'postcode', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'phone', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'client', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'orderDate', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'cookie', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'takenOrder', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'order_item'];
        }

        return ['__isInitialized__', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'id', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'customer', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'firstName', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'lastName', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'address1', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'address2', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'city', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'postcode', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'phone', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'client', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'orderDate', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'cookie', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'takenOrder', '' . "\0" . 'TakeOutHotline\\Entities\\Order' . "\0" . 'order_item'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer($customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress1', []);

        return parent::getAddress1();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress1($address1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress1', [$address1]);

        return parent::setAddress1($address1);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress2', []);

        return parent::getAddress2();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress2($address2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress2', [$address2]);

        return parent::setAddress2($address2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostcode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostcode', []);

        return parent::getPostcode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostcode($postcode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostcode', [$postcode]);

        return parent::setPostcode($postcode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', []);

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient($client)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', [$client]);

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderDate', []);

        return parent::getOrderDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderDate($orderDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderDate', [$orderDate]);

        return parent::setOrderDate($orderDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCookie()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCookie', []);

        return parent::getCookie();
    }

    /**
     * {@inheritDoc}
     */
    public function setCookie($cookie)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCookie', [$cookie]);

        return parent::setCookie($cookie);
    }

    /**
     * {@inheritDoc}
     */
    public function getTakenOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTakenOrder', []);

        return parent::getTakenOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setTakenOrder($takenOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTakenOrder', [$takenOrder]);

        return parent::setTakenOrder($takenOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderItem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderItem', []);

        return parent::getOrderItem();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderItem($order_item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderItem', [$order_item]);

        return parent::setOrderItem($order_item);
    }

}
